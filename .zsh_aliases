#Global
##Env var
#export LANG="en_US.UTF-8"
#export LC_ALL=$LANG
export EDITOR=vi
alias e=vi
alias reload='. ~/.zsh_aliases';
alias settings='e ~/.zsh_aliases;reload';
alias l='ls -lahF';
which sw_vers > /dev/null 2>&1 && alias ls='ls -G'
which sw_vers > /dev/null 2>&1 || alias ls='ls --color';

##Functions
alias backup='which btrfs > /dev/null 2>&1 && (sudo mount /dev/sda1 /mnt;sudo btrfs subvolume snapshot /mnt/@ /mnt/@_`date +"%Y%m%d%H%M%S"`;sudo umount /mnt) || (echo "This feature requires btrfs.")'
function acc() {
  test -f ~/OneDrive/Essentials/accounts.ini && grep -e $1 ~/OneDrive/Essentials/accounts.ini
}

#Development
##Generic
function code() {
  test -d ~/code || return;
  cd ~/code;
 
  test -d ./$1 || return;
  cd ./$1;

  test -d src && test -d src/$(ls --color=none src) && cd src/$(ls --color=none src);
  test -d ./.git && git status || l;
}
alias g='git status';
alias gdf='git diff -b';
alias gco='git checkout';
alias gb='git branch';
alias gbd='git branch -d';
alias gbD='git branch -D';

##Amazon
alias vm='ssh -fY duybui-vm.aka.amazon.com "gnome-terminal" 2> /dev/null';
alias gvm='ssh -fY duybui-vm.aka.amazon.com gnome-panel 2> /dev/null';
alias svm='ssh -Y duybui-vm.aka.amazon.com';
function mvm() {
  test -d /home/duybui && sudo mount -t nfs -o proto=tcp,port=2049 duybui-vm.aka.amazon.com:/workplace/duybui /home/duybui/code;
  test -d /home/duybui && sudo mount -t nfs -o proto=tcp,port=2049 duybui-vm.aka.amazon.com:/apollo /apollo;
  test -d /Users/duybui && sudo mount -t nfs duybui-vm.aka.amazon.com:/rhel5pdi/workplace/duybui /workplace/duybui;
  test -d /Users/duybui && sudo mount -t nfs duybui-vm.aka.amazon.com:/rhel5pdi/apollo /apollo;
}
function aps() {
  if ! [ -d /apollo ]; then
    echo "ERROR: /apollo not found."
    return;
  fi;

  if [ -f /apollo/env/envImprovement/var/zshrc ]; then
    source /apollo/env/envImprovement/var/zshrc;
    return;
  fi;

  NEWPATH="$PATH";
  test -d /apollo/env/SDETools/bin && NEWPATH="/apollo/env/SDETools/bin:$NEWPATH";
  test -d /apollo/env/envImprovement/bin && NEWPATH="/apollo/env/envImprovement/bin:$NEWPATH";
  PATH=$NEWPATH zsh -i;
}

alias pwe='basename $(pwd)';
alias ape='/apollo/bin/env -e `pwe`';
alias apa='sudo /apollo/bin/runCommand -e `pwe` -a Activate';
alias apd='sudo /apollo/bin/runCommand -e `pwe` -a Deactivate';

function log() {
  test -d /apollo/env/$1/var/output/logs || return;
  test -f /apollo/env/$1/var/output/logs/$2 || ls -lahF /apollo/env/$1/var/output/logs/;
  test -f /apollo/env/$1/var/output/logs/$2 && less /apollo/env/$1/var/output/logs/$2;
}

alias activate='sudo /apollo/bin/apolloHostControl --status Active';
alias server='ape brazil-build server';
alias pkg='ape brazil-build apollo-pkg';
function pwmysql() {
  e=`pwe`;
  pMaterial=`grep -e '<root source="odin"' apollo-overrides/$e/mysql-config/server.xml | tr '< >' '\n' | grep materialset | sed -e 's/materialset="//' -e 's/"//' -`;
  pw=`odin $pMaterial`
  db=`grep -e '<database name=' apollo-overrides/$e/mysql-config/server.xml | tr '< >' '\n' | grep name | sed -e 's/name="//' -e 's/"//' -`;

  ape mysql -S /apollo/env/`pwe`/var/mysql/state/mysql.sock -u root -p$pw $db
}

function odin() {
  GET "http://localhost:2009/query?Operation=retrieve&ContentType=JSON&material.materialName=$1&material.materialType=Credential" | tr '{},' '\n\n\n' | sed -n 's/"materialData":"\(.*\)"/\1/p' | base64 -di
}

function railsconsole() {
  e=`pwe`;
  cd rails-root;
  /apollo/bin/env -e $e brazil-runtime-exec rails console;
  cd -;
}

function railsrunner() {
  e=`pwe`;
  cd rails-root;
  /apollo/bin/env -e $e brazil-runtime-exec rails runner ../$1;
  cd -;
}

###Durin
function mdl() {
  echo "\\\\$1\\durin_logs"
  sudo mount -t cifs "\\\\$1\\durin_logs" . -o username=ANT\\duybui,noexec
}

##OpenFISMA

##Sniper

#Init
autoload -U colors
colors
zstyle ':completion:*' menu select
setopt AUTO_PUSHD

PROMPT="%F{blue}%n%f@%F{magenta}%m%f:%F{red}%~/%f"
test -f ~/.git.zsh && source ~/.git.zsh && setopt PROMPT_SUBST && RPROMPT='%F{green}$(__git_ps1)%f'
test -f ~/.git-completion.sh && zstyle ':completion:*:*:git:*' script ~/.git-completion.sh
which brazil > /dev/null 2>&1 || PROMPT="$PROMPT > " 
which brazil > /dev/null 2>&1 && PROMPT="$PROMPT %F{blue}brazil%f> "

[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh

# Add the following line to your ~/.config/fish/config.fish:
# . /usr/local/Cellar/autojump/HEAD/etc/autojump.fish

#_byobu_sourced=1 which byobu-launch > /dev/null 2>&1 && source `which byobu-launch`
